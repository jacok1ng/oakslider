{"mappings":"AAAA,YAAY;AAEZ,UAAU;AACV,MAAM,UAAU,GAAG,QAAQ,CAAC,aAAa,CAAC,aAAa,CAAC;AACxD,MAAM,YAAY,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC;AACrD,MAAM,SAAS,GAAG,QAAQ,CAAC,aAAa,CAAC,aAAa,CAAC;AAEvD,WAAW;AACX,IAAI,GAAG,GAAG,EAAE;AACZ,MAAM,UAAU,GAAG,CAAC;AAEpB,IAAI,YAAY,GAAG,CAAC;AAEpB,MAAM,OAAO,GAAG,UAAY;IAC1B,MAAM,CAAC,GAAG,MAAM,IAAI,EAAE;IACtB,GAAG,GAAG,CAAC;CACR;AAED,UAAU,EAAE;AAEZ,eAAe,UAAU,GAAG;IAC1B,MAAM,OAAO,EAAE;IAEf,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC;IAChB,iBAAiB;IACjB,YAAY,GAAG,CAAC;IAChB,YAAY,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG;IAC7B,SAAS,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG;IAE1B,mBAAmB;IACnB,UAAU,EAAE;IAEZ,UAAU;IACV,WAAW,CAAC,IAAM;QAChB,YAAY,CAAC,SAAS,CAAC,MAAM,CAAC,YAAY,CAAC;QAC3C,SAAS,CAAC,SAAS,CAAC,MAAM,CAAC,aAAa,CAAC;KAC1C,EAAE,IAAI,CAAC;CACT;AAED,YAAY,CAAC,gBAAgB,CAAC,cAAc,EAAE,IAAM;IAClD,GAAG,CAAC,YAAY,CAAC,CAAC,KAAK,GAAG,KAAK;IAC/B,GAAG,CAAC,YAAY,GAAG,CAAC,CAAC,CAAC,KAAK,GAAG,IAAI;IAElC,YAAY,CAAC,SAAS,CAAC,MAAM,CAAC,UAAU,CAAC;IACzC,SAAS,CAAC,SAAS,CAAC,MAAM,CAAC,WAAW,CAAC;IAEvC,YAAY,EAAE;IAEd,eAAe;IACf,YAAY,CAAC,GAAG,GAAG,GAAG,CAAC,YAAY,GAAG,UAAU,CAAC,CAAC,GAAG;IACrD,SAAS,CAAC,GAAG,GAAG,GAAG,CAAC,AAAC,CAAA,YAAY,GAAG,CAAC,CAAA,GAAI,UAAU,CAAC,CAAC,GAAG;IAExD,UAAU,EAAE;CACb,CAAC;AAEF,eAAe,IAAI,GAAG;IACpB,MAAM,QAAQ,GAAG,MAAM,KAAK,CAAC,0CAA0C,CAAC;IACxE,MAAM,EAAE,IAAI,EAAJ,KAAI,CAAA,EAAE,GAAG,MAAM,QAAQ,CAAC,IAAI,EAAE;IAEtC,OAAO,KAAI,CAAA;CACZ;AAED,SAAS,UAAU,GAAG;IACpB,UAAU,CAAC,SAAS,GAAG,CAAC,EAAE,GAAG,CAC1B,GAAG,CAAC,CAAC,EAAE,KAAK,CAAA,EAAE,GACb,KAAK,GACD,8CAA8C,GAC9C,oDAAoD;IAAA,CACzD,CACA,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;CACd","sources":["app.js"],"sourcesContent":["'use strict'\n\n//Handlers\nconst pagination = document.querySelector('.pagination')\nconst currentPhoto = document.querySelector('.photo')\nconst nextPhoto = document.querySelector('.next-photo')\n\n//Variables\nlet pag = []\nconst MAX_SLIDES = 3\n\nlet indexOfPhoto = 0\n\nconst getData = async () => {\n  const d = await data()\n  pag = d\n}\n\ninitSlider()\n\nasync function initSlider() {\n  await getData()\n\n  console.log(pag)\n  //Reset variables\n  indexOfPhoto = 0\n  currentPhoto.src = pag[0].src\n  nextPhoto.src = pag[1].src\n\n  //Insert pagination\n  updateMenu()\n\n  //Interval\n  setInterval(() => {\n    currentPhoto.classList.toggle('moveToLeft')\n    nextPhoto.classList.toggle('moveToLeft2')\n  }, 3000)\n}\n\ncurrentPhoto.addEventListener('animationend', () => {\n  pag[indexOfPhoto].inUse = false\n  pag[indexOfPhoto + 1].inUse = true\n\n  currentPhoto.classList.toggle('moveLeft')\n  nextPhoto.classList.toggle('moveLeft2')\n\n  indexOfPhoto++\n\n  //Change photos\n  currentPhoto.src = pag[indexOfPhoto % MAX_SLIDES].src\n  nextPhoto.src = pag[(indexOfPhoto + 1) % MAX_SLIDES].src\n\n  updateMenu()\n})\n\nasync function data() {\n  const response = await fetch('http://127.0.0.1:8080/assets/images.json')\n  const { data } = await response.json()\n\n  return data\n}\n\nfunction updateMenu() {\n  pagination.innerHTML = `${pag\n    .map(({ inUse }) =>\n      inUse\n        ? '<i class=\"fa-solid fa-circle clickable\"></i>'\n        : '<i class=\"fa-solid fa-circle-notch clickable\"></i>'\n    )\n    .join('')}`\n}\n"],"names":[],"version":3,"file":"index.7c0ccee6.js.map","sourceRoot":"/__parcel_source_root/"}